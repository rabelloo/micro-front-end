{"version":3,"file":"index.js","sources":["../src/App.vue","../src/App.vue?vue&type=template&id=17fd4296&lang.js","../src/index.ts"],"sourcesContent":["<template>\n  <h1>Vue {{ version }}</h1>\n  Current name is <code>{{ name }}</code>\n  <label>\n    Type to change name\n    <input :value=\"name\" @input=\"onInput\" />\n  </label>\n  <p>\n    Changed internally <code>{{ count }}</code> times\n  </p>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, version } from 'vue';\n\nexport default defineComponent({\n  data() {\n    return { count: 0, version };\n  },\n  props: {\n    name: String,\n    onNameChange: Function as PropType<(name: string) => void>,\n  },\n  methods: {\n    onInput(e: KeyboardEvent) {\n      const input = e.currentTarget as HTMLInputElement;\n      this.count++;\n      this.onNameChange?.(input.value);\n    },\n  },\n});\n</script>\n","<template>\n  <h1>Vue {{ version }}</h1>\n  Current name is <code>{{ name }}</code>\n  <label>\n    Type to change name\n    <input :value=\"name\" @input=\"onInput\" />\n  </label>\n  <p>\n    Changed internally <code>{{ count }}</code> times\n  </p>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, version } from 'vue';\n\nexport default defineComponent({\n  data() {\n    return { count: 0, version };\n  },\n  props: {\n    name: String,\n    onNameChange: Function as PropType<(name: string) => void>,\n  },\n  methods: {\n    onInput(e: KeyboardEvent) {\n      const input = e.currentTarget as HTMLInputElement;\n      this.count++;\n      this.onNameChange?.(input.value);\n    },\n  },\n});\n</script>\n","import type { Render } from '@mfe/interface';\nimport { createApp, h, reactive } from 'vue';\nimport App from './App.vue';\n\nexport const root = document.createElement('div');\n\nlet props: Props;\n\ninterface Props {\n  name: string;\n  onNameChange: (name: string) => void;\n}\n\nexport const render: Render = ({ state, setState }) => {\n  if (!props) {\n    props = reactive({\n      name: '',\n      onNameChange: (name: string) => {\n        props.name = name;\n      },\n    });\n\n    createApp({\n      render: () => h(App, props),\n    }).mount(root);\n  }\n\n  props.name = state.name;\n  props.onNameChange = (name: string) => setState({ name });\n};\n"],"names":["_createVNode","App"],"mappings":";;AAeA,aAAe,eAAe,CAAC;IAC7B,IAAI;QACF,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,kBAAS;KAC7B;IACD,KAAK,EAAE;QACL,IAAI,EAAE,MAAM;QACZ,YAAY,EAAE,QAA4C;KAC3D;IACD,OAAO,EAAE;QACP,OAAO,EAAP,UAAQ,CAAgB;;YACtB,IAAM,QAAQ,CAAC,CAAC,aAAiC;YACjD,IAAI,CAAC,KAAK,EAAE;YACZ,MAAA,IAAI,CAAC,YAAY,+CAAjB,IAAI,EAAgB,KAAK,CAAC,KAAK,CAAC;SACjC;KACF;CACF,CAAC;;mEC5BgB;uEAGd;sEAGmB;yDACrB;;;;IARAA,wBAAI,MAAI,mBAAG;;IACKA,0CAAS;IACzBA;;MAEEA;QAAQ,KAAK,EAAE,SAAI;QAAG,OAAK,0CAAE,qCAAO;;;IAEtCA;;MACqBA,0CAAS;;;;;;;;ICJnB,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE;AAElD,IAAI,KAAY,CAAC;IAOJ,MAAM,GAAW,UAAC,EAAmB;QAAjB,KAAK,WAAA,EAAE,QAAQ,cAAA;IAC9C,IAAI,CAAC,KAAK,EAAE;QACV,KAAK,GAAG,QAAQ,CAAC;YACf,IAAI,EAAE,EAAE;YACR,YAAY,EAAE,UAAC,IAAY;gBACzB,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;aACnB;SACF,CAAC,CAAC;QAEH,SAAS,CAAC;YACR,MAAM,EAAE,cAAM,OAAA,CAAC,CAACC,MAAG,EAAE,KAAK,CAAC,GAAA;SAC5B,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;KAChB;IAED,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IACxB,KAAK,CAAC,YAAY,GAAG,UAAC,IAAY,IAAK,OAAA,QAAQ,CAAC,EAAE,IAAI,MAAA,EAAE,CAAC,GAAA,CAAC;AAC5D;;;;"}